# -*- coding: utf-8 -*-
"""Heart Disease prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10Z3eTaKh77pIsEwcOg4aODxSvnw7sIZ2
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.linear_model import LogisticRegression

data=pd.read_csv('data.csv')

data.head()

data.tail()

data.shape

data.info()

data.isnull().sum()

data.describe()

data['target'].value_counts()

X=data.drop(columns='target',axis=1)
Y=data['target']

print(X)

print(Y)

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,stratify=Y,random_state=2)

print(X.shape,X_train.shape,X_test.shape)

model=LogisticRegression()

model.fit(X_train,Y_train)

Training_data_prediction=model.predict(X_train)

training_prediction=accuracy_score(Training_data_prediction,Y_train)
print("The accuracy is ",training_prediction)

Testing_data_prediction=model.predict(X_test)
testing_prediction=accuracy_score(Testing_data_prediction,Y_test)
print("The accuracy is ",testing_prediction)

input_data = (62,0,0,140,268,0,0,160,0,3.6,0,2,2)

input_data_as_numpy_array= np.asarray(input_data)

input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

prediction = model.predict(input_data_reshaped)
print(prediction)

if (prediction[0]== 0):
  print('The Person does not have a Heart Disease')
else:
  print('The Person has Heart Disease')

